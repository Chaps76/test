# Create issue in repository
name: Create Issue
on:
  workflow_dispatch:

jobs:
  create_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue
        uses: actions/github-script@v5
        with:
          script: |
            const { data: { number: issueNumber } } = await github.rest.issues.create({
              owner: context.Chaps76,
              repo: context.repo.test,
              title: 'Your Issue Title',
              body: 'Your Issue Description'
            });
            console.log(`Created issue ${issueNumber}`);

# Make that issue repeat every 20 minutes
name: Repeat Issue
on:
  schedule:
    - cron: "20 * * * *" 
  jobs:
    repeat_issue:
      runs-on: ubuntu-latest
      steps:
        - name: repeat issue
          uses: actions/github-script@v5
          with:
            script: |
              await github.rest.issues.addLabels({
                owner: context.Chaps76,
                repo: context.repo.test,
                issue_number: context.issue.number,
                labels: ['Recurring']
              });

# Link that issue to a project board
name: Link Issue to Project Board
on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue Number'
        required: true
  jobs:
    link_to_project_board:
      runs-on: ubuntu-latest
      steps:
        - name: Link Issue
          uses: actions/github-script@v5
          with:
            script: |
              const { data: projectCards } = await github.rest.projects.listCards({
                column_id: 'mother_board-test' // Replace with the ID of the column on the project board
              });
              const cardId = projectCards[0].id;
              await github.rest.projects.createCard({
                column_id: cardId,
                content_id: context.repo.test,
                content_type: 'Repository'
              });

# Whenever the issue repeats, reset the status of the issue to 'to do'
name: Reset Issue Status
on:
  schedule:
    - cron: "25 * * * *" # Run every Monday at midnight
  jobs:
    reset_issue_status:
      runs-on: ubuntu-latest
      steps:
        - name: Reset Issue Status
          uses: actions/github-script@v5
          with:
            script: |
              await github.rest.issues.update({
                owner: context.Chaps76,
                repo: context.repo.test,
                issue_number: context.issue.number,
                state: 'open'
              });

# Whenever the issue repeats, delete the previous version of the issue
name: Delete Previous Issue Version
on:
  schedule:
    - cron: "25 * * * *" # Run every Monday at midnight
  jobs:
    delete_previous_issue:
      runs-on: ubuntu-latest
      steps:
        - name: Delete Issue
          uses: actions/github-script@v5
          with:
            script: |
              await github.rest.issues.delete({
                owner: context.Chaps76,
                repo: context.repo.test,
                issue_number: context.issue.number
              });

